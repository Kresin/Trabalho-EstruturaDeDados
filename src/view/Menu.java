package view;

import java.io.BufferedReader;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.arquivo.Arquivo;
import model.listaTag.ListaTag;
import model.pilha.PilhaMensagensDeErro;
import model.pilha.PilhaTags;
import model.pilha.PilhaTagsContabilizadas;
import model.tag.Tag;
import model.tag.TagContabilizada;
import model.tag.TagService;

public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        localArquivoTextField.setText("C:\\Users\\gabri\\OneDrive\\Documents\\FURB\\Semestre III\\Estrutura de dados\\Teste.txt");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        localArquivoTextField = new javax.swing.JTextField();
        analisarBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        analiseArquivoTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tagsTable = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Arquivo:");

        localArquivoTextField.setToolTipText("Infome o local do arquivo separando os diretórios com barra invertida ('\\').");

        analisarBtn.setText("Analisar");
        analisarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analisarBtnActionPerformed(evt);
            }
        });

        analiseArquivoTextArea.setColumns(20);
        analiseArquivoTextArea.setRows(5);
        analiseArquivoTextArea.setEnabled(false);
        jScrollPane1.setViewportView(analiseArquivoTextArea);

        tagsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tag", "Quantidade de ocorrências"
            }
        ));
        jScrollPane3.setViewportView(tagsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(localArquivoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(analisarBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(localArquivoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(analisarBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void analisarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analisarBtnActionPerformed
        if (localArquivoTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe o local do arquivo!", "Erro", JOptionPane.WARNING_MESSAGE);
        }
        ListaTag listaTag = new ListaTag();
        Arquivo arquivo = new Arquivo();
        BufferedReader arquivoCarregado = arquivo.carregaArquivo(localArquivoTextField.getText());

        PilhaTags<Tag> pilhaTags = arquivo.percorreArquivo(arquivoCarregado);
        PilhaMensagensDeErro<String> mensagensDeErro = pilhaTags.getMensagensDeErro();
        StringBuilder analiseArquivo = new StringBuilder(); 

        if (!mensagensDeErro.estaVazia()) {
            while (!mensagensDeErro.estaVazia()) {
                analiseArquivo.append(mensagensDeErro.inversePop()).append("\n");
            }
        }

        if (!pilhaTags.estaVazia()) {
            while (!pilhaTags.estaVazia()) {
                analiseArquivo.append("\nFalta tag final para a tag ").append(pilhaTags.pop().getNome());
            }
        }

        if (!analiseArquivo.toString().isEmpty()) {
            analiseArquivoTextArea.setText(analiseArquivo.toString());
        } else {
            PilhaTagsContabilizadas<TagContabilizada> tagsContabilizadas = pilhaTags.getTagsContabilizadas();
            if (!tagsContabilizadas.estaVazia()) {
                DefaultTableModel dtm = new DefaultTableModel(tagsContabilizadas.getTamanhoPilha(), 0);
                dtm.addColumn("Tag");
                dtm.addColumn("Número de ocorrências");
                tagsTable.setModel(dtm);
                
                int tamanhoPilha = tagsContabilizadas.getTamanhoPilha();
                TagService tagService = new TagService();
                for (int i = 0; i < tamanhoPilha; i++) {
                    TagContabilizada tagContabilizada = tagsContabilizadas.pop();
                    tagsTable.setValueAt(tagService.extraiTag(tagContabilizada.getNome()), i, 0);
                    tagsTable.setValueAt(tagContabilizada.getQuantidade(), i, 1);
                }
            }
        }
        /*while (!listaTag.estaVazia()) { //A ideia é colocar os valores na tabela e ir removendo da listaTag
        Tag tag = listaTag.obterUltimo().getInfo();
        Object[] row = {tag.getNome() , tag.getNumInvokes()};
        //tagsTable.addRow();
        listaTag.retirar(tag);
        }*/

    }//GEN-LAST:event_analisarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analisarBtn;
    private javax.swing.JTextArea analiseArquivoTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField localArquivoTextField;
    private javax.swing.JTable tagsTable;
    // End of variables declaration//GEN-END:variables
}
